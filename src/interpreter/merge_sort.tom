let merge_sort(arr: [Int]):[Int] =
    if len(arr) == 1 then
        return arr
    elseif len(arr) == 2 then
        if arr[1] > arr[0] then
            return [arr[0], arr[1]]
        else
            return [arr[1], arr[0]]
    else
        let result = []
        let partition = len(arr) / 2

        let left = arrayofsize(partition)
        let right = arrayofsize(len(arr)-partition)

        let i = 0
        while i < len(arr) do
            if i < partition-1 then
                left[i] = arr[i]
            else
                right[i-(partition-1)] = arr[i]
            end
        end

        left  = merge_sort(left)
        right = merge_sort(right)

        let r = 0
        let l = 0
        while len(result) != partition*2 do
            if left[l] > right[r] then
                result = result ++ right[r]
                r = r + 1
            else
                result = result ++ left[l]
                l = l + 1
            end
        end

        if partition < len(right) then
            result = result ++ right[len(right)-1]
        end
    end
end

let arrayofsize(n: Int):[Int] =
    let arr = []
    let i = 0
    while n >= i do
        arr = arr ++ 0
    end
    return arr
end

print(merge_sort([5,1,4,6,1,3,10,9,2]))